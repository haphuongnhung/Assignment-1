{
	"info": {
		"_postman_id": "77941752-35fa-4b67-b0ef-0cf00e3c31fc",
		"name": "Practice API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24323814"
	},
	"item": [
		{
			"name": "4-GET /todo (404) not plural",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"04. Status code is 404 \", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-CHALLENGER",
						"value": "X-CHALLENGER",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todo",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "5-GET /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"5.1. Check status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"03. Check first id is 1046\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var expectID = pm.response.json().todos[0].id;\r",
							"    pm.expect(expectID).to.eql(1046);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-challenger",
						"value": "X-challenger",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos/1046",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"1046"
					]
				}
			},
			"response": []
		},
		{
			"name": "6-GET /todos/{id} (404)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"RandomId\", _.random(9000, 10000))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"06. Check status code is 404 when id does not exist\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-challenger",
						"value": "{{X-challenger}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos/{{RandomId}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"{{RandomId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "7-HEAD /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"07. Check status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "HEAD",
				"header": [
					{
						"key": "X-challenger",
						"value": "X-challenger",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "8-POST /todos (201)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.globals.set(\"NewToDosId\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-challenger",
						"value": "X-challenger",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://apichallenges.herokuapp.com/todos",
					"protocol": "https",
					"host": [
						"apichallenges",
						"herokuapp",
						"com"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "9-GET /todos (200) ?filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"09. Check get only todos which are 'done'\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-challenger",
						"value": "X-challenger",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos?doneStatus=true",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "10 - POST /todos (400) doneStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"10. Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-challenger",
						"value": "X-challenger",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"title\": \"create new todo\",\r\n        \"doneStatus\": \"bob\",\r\n        \"description\": \"created\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "11-POST /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"11. Check status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "X-challenger",
						"value": "{{X-challenger}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"title\": \"updated id\",\r\n        \"doneStatus\": true,\r\n        \"description\": \"sua\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/todos/1224",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"1224"
					]
				}
			},
			"response": []
		},
		{
			"name": "12-DELETE /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"12. Check status code is 200 when successfully delete a todo\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "X-challenger",
						"value": "X-challenger",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos/1062",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos",
						"1062"
					]
				}
			},
			"response": []
		},
		{
			"name": "13-OPTIONS /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"13.1. Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"13.2. Correct methods in the response header\", function () {\r",
							"   pm.response.to.be.header(\"Allow\", \"OPTIONS, GET, HEAD, POST\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [
					{
						"key": "X-challenger",
						"value": "X-challenger",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{URL}}/todos",
					"host": [
						"{{URL}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		}
	]
}